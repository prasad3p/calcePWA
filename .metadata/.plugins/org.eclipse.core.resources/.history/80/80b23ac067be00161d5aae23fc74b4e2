package calePWA;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

import javax.swing.text.html.HTMLDocument.Iterator;

import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import dataStructures.Component;

public class FIndNodes {

	private static String COMPFILEPATH=System.getProperty("user.home") +"\\Desktop\\calecPWA\\comp1.xlsx";
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		String myID="R7";
		String partName="";
		Component comp = new Component("", null, 0, 0, 0, "");
		comp=getComponentDetails(comp,myID,partName,COMPFILEPATH);
		System.out.println(comp.getId());
		System.out.println(comp.getSide());
		System.out.println(comp.getxC());
		System.out.println(comp.getyC());
		
		
		
	}

	private static Component getComponentDetails(Component comp, String myID, String partName, String fileName) throws IOException {
		// TODO Auto-generated method stub

		InputStream input = new FileInputStream(fileName);
		XSSFWorkbook workbook = new XSSFWorkbook(input); 
	    XSSFSheet sheet = workbook.getSheetAt(0);
	    int j=-1;
	    boolean flag=true;
		for(Row row : sheet) {
            for(Cell cell : row) {
                j++;    
            	if(cell.getRichStringCellValue().getString().replaceAll("\\s","").equals(myID)){
            		
            		System.out.println(cell.getRichStringCellValue().getString().replaceAll("\\s",""));
            		System.out.println("MyID:"+myID);
                   	comp.setId(myID);
                   	j++;
                   	cell=row.getCell(++j);
                   	comp.setSide(cell.getRichStringCellValue().getString().replaceAll("\\s",""));
                   	cell=row.getCell(++j);
                   	comp.setxC((double)(cell.getNumericCellValue()));
                   	cell=row.getCell(++j);
                   	comp.setyC((double)(cell.getNumericCellValue()));
            		flag=false;
                   	break;
            	}
            	if(!flag)break;
            	else {break;}
            	
            }
            j=-1;
 
        }		

		return comp;
	}

}
