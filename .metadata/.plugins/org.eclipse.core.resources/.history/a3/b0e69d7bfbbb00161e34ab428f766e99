package calePWA;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


public class CombineFiles {

	private String FILENAME =System.getProperty("user.home") +"\\Desktop\\calecPWA\\nodes.txt";
	private String FILENAME2 =System.getProperty("user.home") +"\\Desktop\\calecPWA\\zdisp.txt";
	
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
	
		ArrayList <NodeCord> NodeCr = new ArrayList<NodeCord>();
		ArrayList <NodeVal> NodeVal= new ArrayList<NodeVal>();
		
		NodeCr = readNodeCordFile(NodeCr,this.FILENAME);
		NodeVal = readNodeValFile(NodeVal,FILENAME2);	
		
		writeToExcel(NodeCr,NodeVal);
		
	}
	private static ArrayList<calePWA.NodeVal> readNodeValFile(ArrayList<NodeVal> nodeVal, String fILENAME2) {
		// TODO Auto-generated method stub
		
		try (BufferedReader br = new BufferedReader(new FileReader(fILENAME2))) {

			String sCurrentLine;

			while ((sCurrentLine = br.readLine()) != null) {
				
				if(sCurrentLine.replaceAll("\\s+","").equals("NODEUZ"))
				{
					sCurrentLine = br.readLine();
					do
					{
						if(sCurrentLine.replaceAll("\\s+","").equals("NODEUZ"))
							break;
						if(sCurrentLine.replaceAll("\\s+","").equals(""))
							break;
						String[] splits = sCurrentLine.split("\\s+");
						NodeVal nodV = new NodeVal(0,0);
						nodV.setNodeNum(Integer.valueOf(splits[1]));
						nodV.setValue(Double.parseDouble(splits[2]));
						nodeVal.add(nodV);
					}while((sCurrentLine = br.readLine())!=null);
					
				}
			}

		} 
		catch (IOException e) {
				e.printStackTrace();
		}
		
		return nodeVal;
	}
	private static ArrayList<NodeCord> readNodeCordFile(ArrayList<NodeCord> nodeCr, String fILENAME) {
		// TODO Auto-generated method stub
		 try (BufferedReader br = new BufferedReader(new FileReader(fILENAME))) {

				String sCurrentLine;

				while ((sCurrentLine = br.readLine()) != null) {
					
					if(sCurrentLine.replaceAll("\\s+","").equals("NODEXYZTHXYTHYZTHZX"))
					{
						sCurrentLine = br.readLine();
						do
						{
							if(sCurrentLine.replaceAll("\\s+","").equals("NODEXYZTHXYTHYZTHZX"))
								break;
							if(sCurrentLine.replaceAll("\\s+","").equals(""))
								break;
							String[] splits = sCurrentLine.split("\\s+");
							NodeCord node = new NodeCord(0,0,0,0);
							node.setNodeNum(Integer.valueOf(splits[1]));
							node.setxCord(Double.parseDouble(splits[2]));
							node.setyCord(Double.parseDouble(splits[3]));
							node.setzCord(Double.parseDouble(splits[4]));
							nodeCr.add(node);
							
						}while((sCurrentLine = br.readLine())!=null);
						
					}
				}
			} 
			catch (IOException e) {
					e.printStackTrace();
			}
		
		
		return nodeCr;
	}
	public static void writeToExcel(ArrayList <NodeCord> NC, ArrayList <NodeVal> NV) throws IOException{
		
		String home = System.getProperty("user.home")+"\\Downloads\\Result.xlsx";
		
		XSSFWorkbook workbook = new XSSFWorkbook(); 
	    XSSFSheet spreadsheet = workbook.createSheet("Node details");
	    XSSFRow row=spreadsheet.createRow(0);
	    Cell cell=row.createCell(0);
	    cell.setCellValue("Node");
	    Cell cell1=row.createCell(1);
	    cell1.setCellValue("X");
	    Cell cell2=row.createCell(2);
	    cell2.setCellValue("Y");
	    Cell cell3=row.createCell(3);
	    cell3.setCellValue("Z");
	    Cell cell4=row.createCell(4);
	    cell4.setCellValue("Value");
	    int rowId=1;
	    for(int i=0;i<NC.size();i++){
	    	int j=0;
	    	row=spreadsheet.createRow(rowId++);
	    	Cell cellx=row.createCell(j++);
	    	cellx.setCellValue(NC.get(i).getNodeNum());
	    	Cell celly=row.createCell(j++);
	    	celly.setCellValue(NC.get(i).getxCord());
	    	Cell cellz=row.createCell(j++);
	    	cellz.setCellValue(NC.get(i).getyCord());
	    	Cell cellw=row.createCell(j++);
	    	cellw.setCellValue(NC.get(i).getzCord());
	    	Cell cellv=row.createCell(j);
	    	cellv.setCellValue(NV.get(i).getValue());
	    }
	    FileOutputStream out = new FileOutputStream(new File(home));
		workbook.write(out);
		out.close();
		
	}
}
